# Supabase config
# https://supabase.com/docs/guides/cli/config

[project_id]
# This will be automatically generated by the CLI if you are linking to a new project
# and running `supabase start`.
id = "app-prototyper"

[api]
# Port to use for the API URL
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in these schemas will get API
# endpoints. public and storage are protected schemas.
schemas = ["public", "storage", "graphql"]
# Extra schemas to add to the search_path of every request.
extra_search_path = ["public"]
# Maximum number of rows returns from a view, table, or function call.
max_rows = 1000

[db]
# Port to use for the local database URL.
port = 54322
# The database major version to use. This has to be the same as your remote database's.
# Run `SHOW server_version;` on the remote database to check.
major_version = 15

[studio]
# Port to use for Supabase Studio.
port = 54323

# Email testing settings.
[inbucket]
# Port to use for the email testing server.
port = 54324
# Whether to enable email testing.
enabled = true

[functions]
# Route for verifying JWTs. The CLI needs to be able to issue JWTs so that we can authenticated
# requests to functions.
jwt_secret = "super-secret-jwt-token-with-at-least-32-characters-long"
# The maximum duration of a function invocation, in seconds.
# timeout_s = 5

# Set this to "local" if you are developing functions locally.
# import_map = "functions/import_map.json"
# [functions.my_function]
# entrypoint = "index.ts"
# import_map = "my_function/import_map.json"

[auth]
# The base URL of your website. Used for verifying email links.
site_url = "http://localhost:3000"
# A list of extra URLs that will be allowed to redirect to.
additional_redirect_urls = ["http://localhost:3000/*"]
# Whether to enable email confirmations.
enable_email_confirmations = false
# How long tokens are valid for, in seconds.
jwt_expiry = 3600
# Allow/disallow new users to sign up.
disable_signup = false

# Email templates. You can use these to customize the emails that are sent out by the auth server.
[auth.email.template.invite]
# Subject of the email.
subject = "You have been invited"
# Path to the email template.
path = "./email/invite.html"
